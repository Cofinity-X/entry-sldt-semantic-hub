###############################################################
# Copyright (c) 2023 Robert Bosch Manufacturing Solutions GmbH
# Copyright (c) 2023 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Apache License, Version 2.0 which is available at
# https://www.apache.org/licenses/LICENSE-2.0.
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#
# SPDX-License-Identifier: Apache-2.0
###############################################################
test_name: Test APIs are protected with authentication

includes:
  - !include common.yaml

stages:
  - name: Test get models without access token
    request:
      url: "{semantic_hub_api_url:s}/api/v1/models?pageSize=10&page=0"
      method: GET
    response:
      status_code: 401

  - name: Authenticated request
    request:
      url: "{semantic_hub_api_url:s}/api/v1/models?pageSize=10&page=0"
      method: GET
      headers:
        Content-Type: application/json
        Authorization: "Bearer {bearer_token:s}"
    response:
      status_code: 200
      headers:
        content-type: application/json

---
test_name: Test create, read, update and delete a model for BAMM

includes:
  - !include common.yaml

stages:
  - name: Create model expect success
    request:
      url: "{semantic_hub_api_url:s}/api/v1/models?status=DRAFT&type=BAMM"
      method: POST
      headers:
        Content-Type: text/plain
        Accept: application/json
        Authorization: "Bearer {bearer_token:s}"
      data: "{model_bamm_ttl:s}"

    response:
      status_code: 200
      headers:
        content-type: application/json

  - name: Get model by urn
    request:
      url: "{semantic_hub_api_url:s}/api/v1/models/{model_bamm_urn_encoded:s}"
      method: GET
      headers:
        Content-Type: application/json
        Authorization: "Bearer {bearer_token:s}"
    response:
      status_code: 200
      headers:
        content-type: application/json
      json:
        urn: "{model_bamm_urn:s}"
        version: "{model_bamm_version:s}"
        name: "{model_bamm_name:s}"
        type: BAMM
        status: DRAFT

  - name: Update model
    request:
      url: "{semantic_hub_api_url:s}/api/v1/models?status=DRAFT&type=BAMM"
      method: PUT
      headers:
        Content-Type: text/plain
        Accept: application/json
        Authorization: "Bearer {bearer_token:s}"
      data: "{model_bamm_ttl:s}"

    response:
      status_code: 200
      json:
        urn: "{model_bamm_urn:s}"
        version: "{model_bamm_version:s}"
        name: "{model_bamm_name:s}"
        type: BAMM
        status: DRAFT

  - name: Delete model by package urn
    request:
      url: "{semantic_hub_api_url:s}/api/v1/models/{model_bamm_package_urn_encoded:s}"
      method: DELETE
      headers:
        Authorization: "Bearer {bearer_token:s}"
    response:
      status_code: 204

---

test_name: Test create, read, update and delete a model for SAMM

includes:
  - !include common.yaml

stages:
  - name: Create model expect success
    request:
      url: "{semantic_hub_api_url:s}/api/v1/models?status=DRAFT&type=SAMM"
      method: POST
      headers:
        Content-Type: text/plain
        Accept: application/json
        Authorization: "Bearer {bearer_token:s}"
      data: "{model_samm_ttl:s}"

    response:
      status_code: 200
      headers:
        content-type: application/json

  - name: Get model by urn
    request:
      url: "{semantic_hub_api_url:s}/api/v1/models/{model_samm_urn_encoded:s}"
      method: GET
      headers:
        Content-Type: application/json
        Authorization: "Bearer {bearer_token:s}"
    response:
      status_code: 200
      headers:
        content-type: application/json
      json:
        urn: "{model_samm_urn:s}"
        version: "{model_samm_version:s}"
        name: "{model_samm_name:s}"
        type: SAMM
        status: DRAFT

  - name: Update model
    request:
      url: "{semantic_hub_api_url:s}/api/v1/models?status=DRAFT&type=SAMM"
      method: PUT
      headers:
        Content-Type: text/plain
        Accept: application/json
        Authorization: "Bearer {bearer_token:s}"
      data: "{model_samm_ttl:s}"

    response:
      status_code: 200
      json:
        urn: "{model_samm_urn:s}"
        version: "{model_samm_version:s}"
        name: "{model_samm_name:s}"
        type: SAMM
        status: DRAFT

  - name: Delete model by package urn
    request:
      url: "{semantic_hub_api_url:s}/api/v1/models/{model_samm_package_urn_encoded:s}"
      method: DELETE
      headers:
        Authorization: "Bearer {bearer_token:s}"
    response:
      status_code: 204

---

test_name: Test model artifcat generation for BAMM

includes:
  - !include common.yaml

stages:
  - name: Create model expect success
    request:
      url: "{semantic_hub_api_url:s}/api/v1/models?status=DRAFT&type=BAMM"
      method: POST
      headers:
        Content-Type: text/plain
        Accept: application/json
        Authorization: "Bearer {bearer_token:s}"
      data: "{model_bamm_ttl:s}"

    response:
      status_code: 200
      headers:
        content-type: application/json

  - name: Get model as file expect success
    request:
      url: "{semantic_hub_api_url:s}/api/v1/models/{model_bamm_urn_encoded:s}/file"
      method: GET
      headers:
        Authorization: "Bearer {bearer_token:s}"
    response:
      status_code: 200
      headers:
        content-type: text/turtle;charset=UTF-8

  - name: Get model as diagram expect success
    skip: True
    request:
      url: "{semantic_hub_api_url:s}/api/v1/models/{model_bamm_urn_encoded:s}/diagram"
      method: GET
      headers:
        Authorization: "Bearer {bearer_token:s}"
    response:
      status_code: 200
      headers:
        content-type: image/png

  - name: Get model as documentation expect success
    request:
      url: "{semantic_hub_api_url:s}/api/v1/models/{model_bamm_urn_encoded:s}/documentation"
      method: GET
      headers:
        Authorization: "Bearer {bearer_token:s}"
    response:
      status_code: 200
      headers:
        content-type: text/html

  - name: Get model as json-schema expect success
    request:
      url: "{semantic_hub_api_url:s}/api/v1/models/{model_bamm_urn_encoded:s}/json-schema"
      method: GET
      headers:
        Authorization: "Bearer {bearer_token:s}"
    response:
      status_code: 200
      headers:
        content-type: application/schema+json

  - name: Get model as openapi expect success
    request:
      url: "{semantic_hub_api_url:s}/api/v1/models/{model_bamm_urn_encoded:s}/openapi?baseUrl=example.com"
      method: GET
      headers:
        Authorization: "Bearer {bearer_token:s}"
    response:
      status_code: 200
      headers:
        content-type: application/json

  - name: Get model as example-payload expect success
    request:
      url: "{semantic_hub_api_url:s}/api/v1/models/{model_bamm_urn_encoded:s}/example-payload"
      method: GET
      headers:
        Authorization: "Bearer {bearer_token:s}"
    response:
      status_code: 200
      headers:
        content-type: application/json

  - name: Get model as aasx expect success
    request:
      url: "{semantic_hub_api_url:s}/api/v1/models/{model_bamm_urn_encoded:s}/aas"
      method: GET
      headers:
        Authorization: "Bearer {bearer_token:s}"
    response:
      status_code: 200
      headers:
        content-type: application/xml

  - name: Delete model by package urn (cleanup)
    request:
      url: "{semantic_hub_api_url:s}/api/v1/models/{model_bamm_package_urn_encoded:s}"
      method: DELETE
      headers:
        Authorization: "Bearer {bearer_token:s}"
    response:
      status_code: 204

---

test_name: Test model artifcat generation for SAMM

includes:
  - !include common.yaml

stages:
  - name: Create model expect success
    request:
      url: "{semantic_hub_api_url:s}/api/v1/models?status=DRAFT&type=SAMM"
      method: POST
      headers:
        Content-Type: text/plain
        Accept: application/json
        Authorization: "Bearer {bearer_token:s}"
      data: "{model_samm_ttl:s}"

    response:
      status_code: 200
      headers:
        content-type: application/json

  - name: Get model as file expect success
    request:
      url: "{semantic_hub_api_url:s}/api/v1/models/{model_samm_urn_encoded:s}/file"
      method: GET
      headers:
        Authorization: "Bearer {bearer_token:s}"
    response:
      status_code: 200
      headers:
        content-type: text/turtle;charset=UTF-8

  - name: Get model as diagram expect success
    skip: True
    request:
      url: "{semantic_hub_api_url:s}/api/v1/models/{model_samm_urn_encoded:s}/diagram"
      method: GET
      headers:
        Authorization: "Bearer {bearer_token:s}"
    response:
      status_code: 200
      headers:
        content-type: image/png

  - name: Get model as documentation expect success
    request:
      url: "{semantic_hub_api_url:s}/api/v1/models/{model_samm_urn_encoded:s}/documentation"
      method: GET
      headers:
        Authorization: "Bearer {bearer_token:s}"
    response:
      status_code: 200
      headers:
        content-type: text/html

  - name: Get model as json-schema expect success
    request:
      url: "{semantic_hub_api_url:s}/api/v1/models/{model_samm_urn_encoded:s}/json-schema"
      method: GET
      headers:
        Authorization: "Bearer {bearer_token:s}"
    response:
      status_code: 200
      headers:
        content-type: application/schema+json

  - name: Get model as openapi expect success
    request:
      url: "{semantic_hub_api_url:s}/api/v1/models/{model_samm_urn_encoded:s}/openapi?baseUrl=example.com"
      method: GET
      headers:
        Authorization: "Bearer {bearer_token:s}"
    response:
      status_code: 200
      headers:
        content-type: application/json

  - name: Get model as example-payload expect success
    request:
      url: "{semantic_hub_api_url:s}/api/v1/models/{model_samm_urn_encoded:s}/example-payload"
      method: GET
      headers:
        Authorization: "Bearer {bearer_token:s}"
    response:
      status_code: 200
      headers:
        content-type: application/json

  - name: Get model as aasx expect success
    request:
      url: "{semantic_hub_api_url:s}/api/v1/models/{model_samm_urn_encoded:s}/aas"
      method: GET
      headers:
        Authorization: "Bearer {bearer_token:s}"
    response:
      status_code: 200
      headers:
        content-type: application/xml

  - name: Delete model by package urn (cleanup)
    request:
      url: "{semantic_hub_api_url:s}/api/v1/models/{model_samm_package_urn_encoded:s}"
      method: DELETE
      headers:
        Authorization: "Bearer {bearer_token:s}"
    response:
      status_code: 204